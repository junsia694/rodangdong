name: Blog Automation Pipeline

on:
  # 3시간마다 자동 실행
  schedule:
    - cron: '0 */3 * * *'
  
  # 수동 실행 가능
  workflow_dispatch:
    inputs:
      max_keywords:
        description: 'Maximum keywords to process'
        required: false
        default: '3'
        type: string
      mode:
        description: 'Execution mode (harvest or single)'
        required: false
        default: 'harvest'
        type: choice
        options:
          - harvest
          - single
      keyword:
        description: 'Specific keyword (for single mode)'
        required: false
        type: string

env:
  NODE_VERSION: '18'

jobs:
  blog-automation:
    name: Generate and Publish Blog Content
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🗂️ Create data directory
        run: mkdir -p src/data src/logs

      - name: 🔐 Setup environment variables
        run: |
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "BLOGGER_BLOG_ID=${{ secrets.BLOGGER_BLOG_ID }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_REFRESH_TOKEN=${{ secrets.GOOGLE_REFRESH_TOKEN }}" >> .env
          echo "UNSPLASH_ACCESS_KEY=${{ secrets.UNSPLASH_ACCESS_KEY }}" >> .env
          echo "NODE_ENV=production" >> .env
          echo "LOG_LEVEL=info" >> .env

      - name: 🧪 Test configuration
        run: |
          node -e "
          import('./src/config/index.js').then(({ validateConfig }) => {
            if (validateConfig()) {
              console.log('✅ Configuration is valid');
            } else {
              console.log('⚠️ Configuration has warnings');
            }
          }).catch(err => {
            console.error('❌ Configuration test failed:', err);
            process.exit(1);
          });
          "

      - name: 🚀 Run blog automation
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.mode }}" = "single" ] && [ -n "${{ github.event.inputs.keyword }}" ]; then
              echo "Running single keyword mode with: ${{ github.event.inputs.keyword }}"
              node src/index.js --mode single --keyword "${{ github.event.inputs.keyword }}"
            else
              echo "Running harvest mode with max keywords: ${{ github.event.inputs.max_keywords }}"
              node src/index.js --mode harvest --maxKeywords "${{ github.event.inputs.max_keywords }}"
            fi
          else
            echo "Running scheduled harvest mode"
            node src/index.js --mode harvest --maxKeywords 3
          fi

      - name: 📊 Upload logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: automation-logs
          path: |
            src/data/
            src/logs/
          retention-days: 7

      - name: 💾 Commit used keywords (on success)
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [ -f "src/data/used_keywords.json" ]; then
            git add src/data/used_keywords.json
            git commit -m "📝 Update used keywords [skip ci]" || echo "No changes to commit"
            git push || echo "Nothing to push"
          fi

      - name: 📈 Summary
        run: |
          echo "## 🎯 Blog Automation Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Node.js Version**: ${{ env.NODE_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Mode**: ${{ github.event.inputs.mode || 'harvest' }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.mode }}" = "single" ]; then
            echo "- **Keyword**: ${{ github.event.inputs.keyword }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Max Keywords**: ${{ github.event.inputs.max_keywords || '3' }}" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "src/data/used_keywords.json" ]; then
            echo "- **Database**: Updated" >> $GITHUB_STEP_SUMMARY
          fi

  # 선택적: 블로그 상태 확인 작업
  blog-status-check:
    name: Check Blog Status
    runs-on: ubuntu-latest
    needs: blog-automation
    if: always()
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔐 Setup environment variables
        run: |
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "BLOGGER_BLOG_ID=${{ secrets.BLOGGER_BLOG_ID }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_REFRESH_TOKEN=${{ secrets.GOOGLE_REFRESH_TOKEN }}" >> .env

      - name: 🔍 Check blog status
        run: |
          node -e "
          import('./src/modules/bloggerPublisher.js').then(({ default: BloggerPublisher }) => {
            const publisher = new BloggerPublisher();
            return publisher.getBlogInfo();
          }).then(result => {
            if (result.success) {
              console.log('✅ Blog is accessible');
              console.log('Blog URL:', result.blog.url);
              console.log('Blog Title:', result.blog.name);
            } else {
              console.log('❌ Blog status check failed');
            }
          }).catch(err => {
            console.error('❌ Blog status check error:', err.message);
          });
          "

      - name: 📊 Status Summary
        run: |
          echo "## 🔍 Blog Status Check" >> $GITHUB_STEP_SUMMARY
          echo "- **Check Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Completed" >> $GITHUB_STEP_SUMMARY
